import tensorflow as tf
import numpy as np
# Creating a variable
variable = tf.Variable([1, 2, 3, 4, 5])
print(f"Variable tensor: {variable}")
print(f"Shape: {variable.shape}")  # Shape: (5,)

# Modifying a variable
variable.assign([5, 4, 3, 2, 1])
print(f"Modified variable: {variable}")

# Creating a variable with a specific shape and data type
zeros_var = tf.Variable(tf.zeros([2, 3], dtype=tf.float32))
print(f"Zeros variable: {zeros_var}")
print(f"Shape: {zeros_var.shape}")  # Shape: (2, 3)

# Updating specific elements
zeros_var[0, 1].assign(5.0)
print(f"Updated zeros variable: {zeros_var}")



























import tensorflow as tf
import numpy as np

# Creating a scalar (rank-0 tensor)
scalar = tf.constant(42)
print(f"Scalar tensor: {scalar}")
print(f"Shape: {scalar.shape}")  # Shape: ()

# Creating a vector (rank-1 tensor)
vector = tf.constant([1, 2, 3, 4])
print(f"Vector tensor: {vector}")
print(f"Shape: {vector.shape}")  # Shape: (4,)

# Creating a matrix (rank-2 tensor)
matrix = tf.constant([[1, 2, 3], [4, 5, 6]])
print(f"Matrix tensor: {matrix}")
print(f"Shape: {matrix.shape}")  # Shape: (2, 3)

# Creating a 3D tensor
tensor_3d = tf.constant([[[1, 2], [3, 4]], [[5, 6], [7, 8]]])
print(f"3D tensor: {tensor_3d}")
print(f"Shape: {tensor_3d.shape}")  # Shape: (2, 2, 2)

# Creating tensors with specific data types
float_tensor = tf.constant([1.0, 2.0, 3.0], dtype=tf.float32)
int_tensor = tf.constant([1, 2, 3], dtype=tf.int32)
bool_tensor = tf.constant([True, False, True], dtype=tf.bool)



















































import numpy as np
import tensorflow as tf
# Getting tensor shape info
a = tf.constant([[1, 2, 3], [4, 5, 6]])
print(f"Tensor: {a}")
print(f"Shape: {a.shape}")  # TensorShape([2, 3])
print(f"Rank: {tf.rank(a)}")  # 2
print(f"Size: {tf.size(a)}")  # 6

# Reshaping tensors
reshaped = tf.reshape(a, [3, 2])
print(f"Reshaped tensor: {reshaped}")
print(f"New shape: {reshaped.shape}")  # TensorShape([3, 2])

# Use -1 for automatic dimension calculation
auto_reshape = tf.reshape(a, [1, -1])  # Flattens into a 1Ã—6 tensor
print(f"Auto-reshaped tensor: {auto_reshape}")
print(f"New shape: {auto_reshape.shape}")  # TensorShape([1, 6])

# Expanding dimensions
expanded = tf.expand_dims(a, axis=0)
print(f"Expanded tensor: {expanded}")
print(f"New shape: {expanded.shape}")  # TensorShape([1, 2, 3])

# Squeezing dimensions (removing dimensions of size 1)
squeezed = tf.squeeze(expanded)
print(f"Squeezed tensor: {squeezed}")
print(f"New shape: {squeezed.shape}")  # Back to TensorShape([2, 3])

# Transposing
transposed = tf.transpose(a)
print(f"Transposed tensor: {transposed}")
print(f"New shape: {transposed.shape}")  # TensorShape([3, 2])
